# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: command.proto
# Protobuf Python Version: 5.28.3
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import runtime_version as _runtime_version
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
_runtime_version.ValidateProtobufRuntimeVersion(
    _runtime_version.Domain.PUBLIC,
    5,
    28,
    3,
    '',
    'command.proto'
)
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\rcommand.proto\"\x1c\n\x08InputCmd\x12\x10\n\x08\x63ontrols\x18\x01 \x01(\r\"s\n\x03\x43md\x12 \n\x06inputs\x18\x01 \x03(\x0b\x32\x10.Cmd.InputsEntry\x12\x10\n\x08shutdown\x18\x64 \x01(\x08\x1a\x38\n\x0bInputsEntry\x12\x0b\n\x03key\x18\x01 \x01(\r\x12\x18\n\x05value\x18\x02 \x01(\x0b\x32\t.InputCmd:\x02\x38\x01\"%\n\tClientCmd\x12\x18\n\x05input\x18\x01 \x01(\x0b\x32\t.InputCmdB\x1b\n\x17\x65m.altitude.game.protosP\x01')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'command_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  _globals['DESCRIPTOR']._loaded_options = None
  _globals['DESCRIPTOR']._serialized_options = b'\n\027em.altitude.game.protosP\001'
  _globals['_CMD_INPUTSENTRY']._loaded_options = None
  _globals['_CMD_INPUTSENTRY']._serialized_options = b'8\001'
  _globals['_INPUTCMD']._serialized_start=17
  _globals['_INPUTCMD']._serialized_end=45
  _globals['_CMD']._serialized_start=47
  _globals['_CMD']._serialized_end=162
  _globals['_CMD_INPUTSENTRY']._serialized_start=106
  _globals['_CMD_INPUTSENTRY']._serialized_end=162
  _globals['_CLIENTCMD']._serialized_start=164
  _globals['_CLIENTCMD']._serialized_end=201
# @@protoc_insertion_point(module_scope)
