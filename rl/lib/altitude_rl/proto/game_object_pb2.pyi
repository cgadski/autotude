"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import google.protobuf.descriptor
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _ObjectType:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _ObjectTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_ObjectType.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    UNKNOWN_OBJECT: _ObjectType.ValueType  # 128
    LOOPY: _ObjectType.ValueType  # 0
    """# Planes"""
    BOMBER: _ObjectType.ValueType  # 1
    EXPLODET: _ObjectType.ValueType  # 2
    BIPLANE: _ObjectType.ValueType  # 3
    MIRANDA: _ObjectType.ValueType  # 4
    MISSLE_POWERUP: _ObjectType.ValueType  # 10
    """# Powerups"""
    SHIELD_POWERUP: _ObjectType.ValueType  # 11
    WALL_POWERUP: _ObjectType.ValueType  # 12
    BIG_BOMB_POWERUP: _ObjectType.ValueType  # 13
    BALL: _ObjectType.ValueType  # 14
    """works like a powerup"""
    HEALTH_POWERUP: _ObjectType.ValueType  # 15
    POWERUP_SPAWNER: _ObjectType.ValueType  # 16
    DOUBLE_FIRE_MISSLE: _ObjectType.ValueType  # 20
    """# Projectiles
    ## Loopy
    """
    TRACKER_MISSLE: _ObjectType.ValueType  # 21
    EMP_CAPSULE: _ObjectType.ValueType  # 22
    EMP_EXPLOSION: _ObjectType.ValueType  # 23
    ACID_BOMB: _ObjectType.ValueType  # 24
    ACID_CLOUD: _ObjectType.ValueType  # 25
    NADE: _ObjectType.ValueType  # 30
    """## Bomber"""
    FLAK: _ObjectType.ValueType  # 31
    SUPPRESSOR: _ObjectType.ValueType  # 32
    DOMB: _ObjectType.ValueType  # 33
    BIPLANE_PRIMARY: _ObjectType.ValueType  # 40
    """## Biplane"""
    BIPLANE_SECONDARY: _ObjectType.ValueType  # 41
    HEAVY_CANNON: _ObjectType.ValueType  # 42
    DIRECTOR_ROCKET: _ObjectType.ValueType  # 50
    """## Explodet"""
    THERMOBARIC_ROCKET: _ObjectType.ValueType  # 51
    REMOTE_MINE: _ObjectType.ValueType  # 52
    DIRECTOR_MINE: _ObjectType.ValueType  # 53
    LASER: _ObjectType.ValueType  # 60
    """## Miranda"""
    TRICKSTER_SHOT: _ObjectType.ValueType  # 61
    LASER_SHOT: _ObjectType.ValueType  # 62
    HOMING_MISSLE: _ObjectType.ValueType  # 70
    """## Special"""
    WALL: _ObjectType.ValueType  # 71
    SHIELD: _ObjectType.ValueType  # 72
    BIG_BOMB: _ObjectType.ValueType  # 73
    GOAL: _ObjectType.ValueType  # 74
    BASE: _ObjectType.ValueType  # 75

class ObjectType(_ObjectType, metaclass=_ObjectTypeEnumTypeWrapper): ...

UNKNOWN_OBJECT: ObjectType.ValueType  # 128
LOOPY: ObjectType.ValueType  # 0
"""# Planes"""
BOMBER: ObjectType.ValueType  # 1
EXPLODET: ObjectType.ValueType  # 2
BIPLANE: ObjectType.ValueType  # 3
MIRANDA: ObjectType.ValueType  # 4
MISSLE_POWERUP: ObjectType.ValueType  # 10
"""# Powerups"""
SHIELD_POWERUP: ObjectType.ValueType  # 11
WALL_POWERUP: ObjectType.ValueType  # 12
BIG_BOMB_POWERUP: ObjectType.ValueType  # 13
BALL: ObjectType.ValueType  # 14
"""works like a powerup"""
HEALTH_POWERUP: ObjectType.ValueType  # 15
POWERUP_SPAWNER: ObjectType.ValueType  # 16
DOUBLE_FIRE_MISSLE: ObjectType.ValueType  # 20
"""# Projectiles
## Loopy
"""
TRACKER_MISSLE: ObjectType.ValueType  # 21
EMP_CAPSULE: ObjectType.ValueType  # 22
EMP_EXPLOSION: ObjectType.ValueType  # 23
ACID_BOMB: ObjectType.ValueType  # 24
ACID_CLOUD: ObjectType.ValueType  # 25
NADE: ObjectType.ValueType  # 30
"""## Bomber"""
FLAK: ObjectType.ValueType  # 31
SUPPRESSOR: ObjectType.ValueType  # 32
DOMB: ObjectType.ValueType  # 33
BIPLANE_PRIMARY: ObjectType.ValueType  # 40
"""## Biplane"""
BIPLANE_SECONDARY: ObjectType.ValueType  # 41
HEAVY_CANNON: ObjectType.ValueType  # 42
DIRECTOR_ROCKET: ObjectType.ValueType  # 50
"""## Explodet"""
THERMOBARIC_ROCKET: ObjectType.ValueType  # 51
REMOTE_MINE: ObjectType.ValueType  # 52
DIRECTOR_MINE: ObjectType.ValueType  # 53
LASER: ObjectType.ValueType  # 60
"""## Miranda"""
TRICKSTER_SHOT: ObjectType.ValueType  # 61
LASER_SHOT: ObjectType.ValueType  # 62
HOMING_MISSLE: ObjectType.ValueType  # 70
"""## Special"""
WALL: ObjectType.ValueType  # 71
SHIELD: ObjectType.ValueType  # 72
BIG_BOMB: ObjectType.ValueType  # 73
GOAL: ObjectType.ValueType  # 74
BASE: ObjectType.ValueType  # 75
global___ObjectType = ObjectType

class _Perk:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _PerkEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Perk.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    R_LOOPY_TRACKER: _Perk.ValueType  # 0
    """red"""
    R_LOOPY_DOUBLE_FIRE: _Perk.ValueType  # 1
    R_LOOPY_ACID_BOMB: _Perk.ValueType  # 2
    R_BOMBER_SUPPRESSOR: _Perk.ValueType  # 3
    R_BOMBER_BOMBS: _Perk.ValueType  # 4
    R_BOMBER_FLAK_TAILGUN: _Perk.ValueType  # 5
    R_EXPLODET_DIRECTOR: _Perk.ValueType  # 6
    R_EXPLODET_THERMOBARIC_ROCKETS: _Perk.ValueType  # 7
    R_EXPLODET_REMOTE_MINE: _Perk.ValueType  # 8
    R_BIPLANE_DOGFIGHTER: _Perk.ValueType  # 9
    R_BIPLANE_RECOILLESS_GUN: _Perk.ValueType  # 10
    R_BIPLANE_HEAVY_CANNON: _Perk.ValueType  # 11
    R_MIRANDA_TRICKSTER: _Perk.ValueType  # 12
    R_MIRANDA_LASER: _Perk.ValueType  # 13
    R_MIRANDA_TIME_ANCHOR: _Perk.ValueType  # 14
    G_RUBBERIZED_HULL: _Perk.ValueType  # 15
    """green"""
    G_HEAVY_ARMOR: _Perk.ValueType  # 16
    G_REPAIR_DRONE: _Perk.ValueType  # 17
    G_FLEXIBLE_WINGS: _Perk.ValueType  # 18
    B_TURBOCHARGER: _Perk.ValueType  # 19
    """blue"""
    B_ULTRACAPACITOR: _Perk.ValueType  # 20
    B_REVERSE_THRUST: _Perk.ValueType  # 21
    B_ACE_INSTINCTS: _Perk.ValueType  # 22

class Perk(_Perk, metaclass=_PerkEnumTypeWrapper): ...

R_LOOPY_TRACKER: Perk.ValueType  # 0
"""red"""
R_LOOPY_DOUBLE_FIRE: Perk.ValueType  # 1
R_LOOPY_ACID_BOMB: Perk.ValueType  # 2
R_BOMBER_SUPPRESSOR: Perk.ValueType  # 3
R_BOMBER_BOMBS: Perk.ValueType  # 4
R_BOMBER_FLAK_TAILGUN: Perk.ValueType  # 5
R_EXPLODET_DIRECTOR: Perk.ValueType  # 6
R_EXPLODET_THERMOBARIC_ROCKETS: Perk.ValueType  # 7
R_EXPLODET_REMOTE_MINE: Perk.ValueType  # 8
R_BIPLANE_DOGFIGHTER: Perk.ValueType  # 9
R_BIPLANE_RECOILLESS_GUN: Perk.ValueType  # 10
R_BIPLANE_HEAVY_CANNON: Perk.ValueType  # 11
R_MIRANDA_TRICKSTER: Perk.ValueType  # 12
R_MIRANDA_LASER: Perk.ValueType  # 13
R_MIRANDA_TIME_ANCHOR: Perk.ValueType  # 14
G_RUBBERIZED_HULL: Perk.ValueType  # 15
"""green"""
G_HEAVY_ARMOR: Perk.ValueType  # 16
G_REPAIR_DRONE: Perk.ValueType  # 17
G_FLEXIBLE_WINGS: Perk.ValueType  # 18
B_TURBOCHARGER: Perk.ValueType  # 19
"""blue"""
B_ULTRACAPACITOR: Perk.ValueType  # 20
B_REVERSE_THRUST: Perk.ValueType  # 21
B_ACE_INSTINCTS: Perk.ValueType  # 22
global___Perk = Perk

@typing.final
class GameObject(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    UID_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    OWNER_FIELD_NUMBER: builtins.int
    TEAM_FIELD_NUMBER: builtins.int
    POSITION_X_FIELD_NUMBER: builtins.int
    POSITION_Y_FIELD_NUMBER: builtins.int
    ANGLE_FIELD_NUMBER: builtins.int
    SCALE_FIELD_NUMBER: builtins.int
    FLIPX_FIELD_NUMBER: builtins.int
    FLIPY_FIELD_NUMBER: builtins.int
    CHARGE_FIELD_NUMBER: builtins.int
    HEAL_PERCENTAGE_FIELD_NUMBER: builtins.int
    TIME_REMAINING_FIELD_NUMBER: builtins.int
    AMMO_FIELD_NUMBER: builtins.int
    HEALTH_FIELD_NUMBER: builtins.int
    HEALTH_RESTORE_FIELD_NUMBER: builtins.int
    THROTTLE_FIELD_NUMBER: builtins.int
    BARS_FIELD_NUMBER: builtins.int
    EMP_FOR_FIELD_NUMBER: builtins.int
    ACID_FOR_FIELD_NUMBER: builtins.int
    STALLED_FIELD_NUMBER: builtins.int
    SPIN_FIELD_NUMBER: builtins.int
    CONTROLLABLE_FIELD_NUMBER: builtins.int
    CONTROLS_FIELD_NUMBER: builtins.int
    POWERUP_FIELD_NUMBER: builtins.int
    REDPERK_FIELD_NUMBER: builtins.int
    BLUEPERK_FIELD_NUMBER: builtins.int
    GREENPERK_FIELD_NUMBER: builtins.int
    uid: builtins.int
    type: global___ObjectType.ValueType
    owner: builtins.int
    team: builtins.int
    position_x: builtins.int
    """# Physical data
    half-pixels
    """
    position_y: builtins.int
    angle: builtins.int
    """1/10 degrees"""
    scale: builtins.int
    """## Scaling for goals and bases
    unit is 1/1000
    """
    flipX: builtins.bool
    flipY: builtins.bool
    charge: builtins.int
    """## Misc
    for randa shots. max is 1000
    """
    heal_percentage: builtins.int
    """for health packs. max is 100"""
    time_remaining: builtins.int
    """ticks (1/30 second)"""
    ammo: builtins.int
    """# Planes
    max is 1000 for all loadouts
    """
    health: builtins.int
    """max is 1000 for all loadouts"""
    health_restore: builtins.int
    """additional incoming health, max is 1000"""
    throttle: builtins.int
    """max is 1000"""
    bars: builtins.int
    """from 0 to 9"""
    emp_for: builtins.int
    """ticks remaining"""
    acid_for: builtins.int
    """ticks remaining"""
    stalled: builtins.bool
    spin: builtins.int
    """degrees"""
    controllable: builtins.bool
    """whether plane is the "subject" or a controllable bot"""
    controls: builtins.int
    """up + down << 1 + left << 2 + right << 3"""
    powerup: global___ObjectType.ValueType
    redPerk: global___Perk.ValueType
    bluePerk: global___Perk.ValueType
    greenPerk: global___Perk.ValueType
    def __init__(
        self,
        *,
        uid: builtins.int | None = ...,
        type: global___ObjectType.ValueType | None = ...,
        owner: builtins.int | None = ...,
        team: builtins.int | None = ...,
        position_x: builtins.int | None = ...,
        position_y: builtins.int | None = ...,
        angle: builtins.int | None = ...,
        scale: builtins.int | None = ...,
        flipX: builtins.bool | None = ...,
        flipY: builtins.bool | None = ...,
        charge: builtins.int | None = ...,
        heal_percentage: builtins.int | None = ...,
        time_remaining: builtins.int | None = ...,
        ammo: builtins.int | None = ...,
        health: builtins.int | None = ...,
        health_restore: builtins.int | None = ...,
        throttle: builtins.int | None = ...,
        bars: builtins.int | None = ...,
        emp_for: builtins.int | None = ...,
        acid_for: builtins.int | None = ...,
        stalled: builtins.bool | None = ...,
        spin: builtins.int | None = ...,
        controllable: builtins.bool | None = ...,
        controls: builtins.int | None = ...,
        powerup: global___ObjectType.ValueType | None = ...,
        redPerk: global___Perk.ValueType | None = ...,
        bluePerk: global___Perk.ValueType | None = ...,
        greenPerk: global___Perk.ValueType | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["acid_for", b"acid_for", "ammo", b"ammo", "angle", b"angle", "bars", b"bars", "bluePerk", b"bluePerk", "charge", b"charge", "controllable", b"controllable", "controls", b"controls", "emp_for", b"emp_for", "flipX", b"flipX", "flipY", b"flipY", "greenPerk", b"greenPerk", "heal_percentage", b"heal_percentage", "health", b"health", "health_restore", b"health_restore", "owner", b"owner", "position_x", b"position_x", "position_y", b"position_y", "powerup", b"powerup", "redPerk", b"redPerk", "scale", b"scale", "spin", b"spin", "stalled", b"stalled", "team", b"team", "throttle", b"throttle", "time_remaining", b"time_remaining", "type", b"type", "uid", b"uid"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["acid_for", b"acid_for", "ammo", b"ammo", "angle", b"angle", "bars", b"bars", "bluePerk", b"bluePerk", "charge", b"charge", "controllable", b"controllable", "controls", b"controls", "emp_for", b"emp_for", "flipX", b"flipX", "flipY", b"flipY", "greenPerk", b"greenPerk", "heal_percentage", b"heal_percentage", "health", b"health", "health_restore", b"health_restore", "owner", b"owner", "position_x", b"position_x", "position_y", b"position_y", "powerup", b"powerup", "redPerk", b"redPerk", "scale", b"scale", "spin", b"spin", "stalled", b"stalled", "team", b"team", "throttle", b"throttle", "time_remaining", b"time_remaining", "type", b"type", "uid", b"uid"]) -> None: ...

global___GameObject = GameObject
