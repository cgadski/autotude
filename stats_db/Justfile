STATS_DB := env_var("STATS_DB")
sqlite := "sqlite3 " + STATS_DB

load-csv table_name schema:
	{{sqlite}} "DROP TABLE IF EXISTS {{table_name}}; CREATE TABLE {{table_name}} ({{schema}});"
	{{sqlite}} ".mode csv" ".import csv/{{table_name}}.csv {{table_name}}"

load-schema:
	([ ! -e {{STATS_DB}} ] && {{sqlite}} < schema.sql) || true

load-csvs: \
    (load-csv "custom_handles" "vapor TEXT, handle TEXT") \
    (load-csv "perk_names" "id INTEGER, name TEXT") \
    (load-csv "plane_names" "id INTEGER, name TEXT") \
    (load-csv "broken_replays" "stem TEXT")

dump: load-schema load-csvs clear-errors
	# cargo run --release --bin dump -- --db {{STATS_DB}}
	dump --db {{STATS_DB}}
	{{sqlite}} < tables/handles.sql
	{{sqlite}} < tables/replays_wide.sql
	{{sqlite}} < tables/ladder_games.sql
	{{sqlite}} < tables/players_wide.sql
	{{sqlite}} < tables/players_short.sql
	{{sqlite}} < tables/time_alive.sql
	{{sqlite}} "ANALYZE"

load-views:
	{{sqlite}} < views/game_teams.sql
	{{sqlite}} < views/last_played.sql
	{{sqlite}} < views/monthly_activity.sql

load-stats:
	python3 materialize_stats.py --db {{STATS_DB}} --stats-dir stats/

clear-errors:
	{{sqlite}} "DELETE FROM errored;"

show-errors:
	./show-errors.sh

query:
	#!/bin/bash
	query=$(ls stats/*.sql | sed 's|stats/||; s|\.sql||' | fzf --prompt="Select query: ")
	if [ -n "$query" ]; then
		{{sqlite}} -table < "stats/$query.sql"
	fi
